@@ -0,0 +1,91 @@
//John Michael DiDonato
//Feburary 6, 2014 (2/6/2014)
//Section 002

//Homework 2
// Program description:This program is meant to accept a series of positive integers
// and determine the prime factor that would multiply that integer. This program will 
// also tell the user if the numnber they inputed is prime. The program will continue 
//run as long as the input values the user puts into the program are valid. Invalid
//input values are 0, 1, and -1



#include <iostream>
using namespace std;

int main()
{

	int divisor;	// this value divides the input value
	int input;		//the value given by the user
	int num;		//This value is a stand in value for the input as it continues be divided so that the input value can retain its initial value
	int factor;		//this value adds clarification to the program, whenever the divisor divides the input without a remainder the divisor becomes a factor
	bool check1;	//This check value is used in condition of the nested while loop to check if the number has been totally factorized or if the number
					// is prime; if either one of two becomes true then the check value will be changed to terminate the loop
	bool check2;	//this value is used in the condition of an if statement to determine if at least one factor has been found
					//for the input value; if a factor has not been found before the sqaureroot of the input has been surpassed
					//then the input value must be a prime number

	cout << "What number should we factor?	";	//prompts user to enter input value
	cin >> input;								//sets user input to varibale 'input'

	while (input != 0 && input != 1 && input > 0) //conidition checks if the user input is valid the numbers 0,1,and -1 are neither prime or composite and will not be accepted by the program
	{
		check1 = 0;									//check1 is set to false because the input value has not been totally factorized yet or has not yet been found to be prime
		check2 = 0;									//check2 is set to false because at least one factor of the input value has not yet been found
		num = input;						//num is set to the value of the input so that the intitial input value can be saved and so that calculations of the input value can be made using num
		divisor = 2;						//divisor is set to 2, 2 is the first number the progam will check to see if it is a factor 
		cout << input;						//first output will be the input value
		cout << " = ";						// next output will be = on the same line

			while (check1 == 0)				//while loop conidtions checks if number has been totally factorized yet or has been found to be prime
			{
			
				if (num % divisor == 0)		//if statement evulates condition if there is no remaninder when num is divided by divsior
				{

						factor = divisor;	//if the if condition is found to be true then the the divisor number becomes a prime factor of the input value
						check2 = 1;			//check2 is set to be true because at least one factor has been found before the divisor has reached a certain number seen later in the program
						cout << factor;		//output the factor
						num = num / divisor;	//num becomes redefined and becomes the integer result of the division between the previous num value and divisor
						if (num == 1)			//if num is equal to one then the input value has been totally factorized
						{
							//Two is a special excpetion to the layout of the program. The program decides if a number is prime if no factor has been idientifed by the time the divisor vairable
							//is greater than sqaureroot of the input value. because the first number we begin to divide by is 2 and 2 is divisible by 2, a factor has been identified for 2
							//before the program can check if the sqaureroot of the input has been passed. Due to this an if statment is added here to check for 2 and to output the correct
							//statement that 2 is a prime number
							if (input == 2)
							{
							cout << "	prime";
							}

							check1 = 1;		//check1 is set to true because at this poin the input value has been totally factorized, this will cause the loop to end
							cout << endl;	//sets next output to a new line for the subsequent integer that will be factorized
						}
						else
							cout << " * "; //if one factor has been found but it is the the last factor then a mutplication sign is added to the output line for the next factor
				}

				else			// else statement here if the num divided by divisor has a remainder
				{
					if ((divisor > sqrt(input)) && check2 == 0)		//this if statment checks if the number is a prime number; if the divisor is greater than the sqaureroot of the input, which
					{												//is the largest possible value for its seconds largest prime factor and no factor has yet to be identified then the number
																	//is a prime number
						cout << input << "	prime" << endl;			//output number is prime
						check1 = 1;									//sets check1 to true because prime number has been detetmined so loop ends
					}
					else                           //if num divided by divisor has a remainder but and divisor is not greater than the sqaureroot of the input then value of divisor increases by 1
					divisor++;						//and the loop continues with the new value of divisor
					
				}
			
			}

		//once loop that determines the prime factor of the input or if the input is prime ends, user is prompted to factor another number and the loop continues as long as input is valid
		cout << "What number should we factor?	"; 
		cin >> input;
	}

	return 0;
}
